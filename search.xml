<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>需要手写的代码</title>
      <link href="/2023/06/06/%E9%9C%80%E8%A6%81%E6%89%8B%E5%86%99%E7%9A%84%E4%BB%A3%E7%A0%81/"/>
      <url>/2023/06/06/%E9%9C%80%E8%A6%81%E6%89%8B%E5%86%99%E7%9A%84%E4%BB%A3%E7%A0%81/</url>
      
        <content type="html"><![CDATA[<h1 id="需要手写的代码"><a href="#需要手写的代码" class="headerlink" title="需要手写的代码"></a>需要手写的代码</h1><h2 id="1、排序算法"><a href="#1、排序算法" class="headerlink" title="1、排序算法"></a>1、排序算法</h2><h3 id="冒泡排序"><a href="#冒泡排序" class="headerlink" title="冒泡排序"></a>冒泡排序</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = [<span class="number">1</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">2</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">1</span>]</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">bubbleSort</span>(<span class="params">arr</span>)&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> i = <span class="number">0</span> ; i &lt; arr.<span class="property">length</span>-<span class="number">1</span> ; i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">let</span> j = <span class="number">0</span> ; j&lt; arr.<span class="property">length</span>-i ; j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(arr[j]&gt;arr[j+<span class="number">1</span>])&#123;</span><br><span class="line">                <span class="keyword">let</span> temp = arr[j]</span><br><span class="line">                arr[j] = arr[j+<span class="number">1</span>]</span><br><span class="line">                arr[j+<span class="number">1</span>] = temp</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> arr</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">bubbleSort</span>(arr))</span><br></pre></td></tr></table></figure><h3 id="选择排序"><a href="#选择排序" class="headerlink" title="选择排序"></a>选择排序</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = [<span class="number">1</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">2</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">1</span>]</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">selectSort</span>(<span class="params">arr</span>)&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> i = <span class="number">0</span> ; i &lt; arr.<span class="property">length</span> - <span class="number">1</span>; i++)&#123;</span><br><span class="line">        <span class="keyword">let</span> min = i</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">let</span> j = min + <span class="number">1</span> ; j &lt; arr.<span class="property">length</span>; j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(arr[min]&gt;arr[j])&#123;</span><br><span class="line">                min = j</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">let</span> temp = arr[min]</span><br><span class="line">        arr[min] = arr[i]</span><br><span class="line">        arr[i] = temp</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> arr</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">selectSort</span>(arr))</span><br></pre></td></tr></table></figure><h3 id="快速排序"><a href="#快速排序" class="headerlink" title="快速排序"></a>快速排序</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = [<span class="number">1</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">2</span>,<span class="number">10</span>,<span class="number">5</span>,<span class="number">1</span>]</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">quickSort</span>(<span class="params">arr</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span>(arr.<span class="property">length</span> &lt;= <span class="number">1</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> arr</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">let</span> mid = arr[<span class="number">0</span>]</span><br><span class="line">    <span class="keyword">let</span> left = []</span><br><span class="line">    <span class="keyword">let</span> right = []</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> i = <span class="number">1</span> ; i &lt; arr.<span class="property">length</span> ; i++)&#123;</span><br><span class="line">        mid&gt;arr[i]?left.<span class="title function_">push</span>(arr[i]):right.<span class="title function_">push</span>(arr[i])</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">quickSort</span>(left).<span class="title function_">concat</span>(mid,<span class="title function_">quickSort</span>(right))</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">quickSort</span>(arr))</span><br></pre></td></tr></table></figure><h2 id="2、闭包相关"><a href="#2、闭包相关" class="headerlink" title="2、闭包相关"></a>2、闭包相关</h2><h3 id="防抖-debounce"><a href="#防抖-debounce" class="headerlink" title="防抖(debounce)"></a>防抖(debounce)</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//思想：在规定的时间内连续触发事件只执行最后一次</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">debounce</span>(<span class="params">callback,delay</span>)&#123;</span><br><span class="line">    <span class="keyword">let</span> timer = <span class="literal">null</span></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="built_in">clearTimeout</span>(timer)</span><br><span class="line">        timer = <span class="built_in">setTimeout</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">            <span class="title function_">callback</span>()</span><br><span class="line">            <span class="built_in">clearTimeout</span>(timer)</span><br><span class="line">        &#125;,delay)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> btn = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.btn&#x27;</span>)</span><br><span class="line">btn.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>,<span class="title function_">debounce</span>(<span class="function">()=&gt;</span>&#123;<span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;hello&#x27;</span>);&#125;,<span class="number">1000</span>))</span><br></pre></td></tr></table></figure><p>用户在输入框中连续输入一串字符时，可以通过防抖策略，只在输入完后，才执行查询的请求，这样可以有效减少请求次数，节约请求资源；</p><h3 id="节流-throttle"><a href="#节流-throttle" class="headerlink" title="节流(throttle)"></a>节流(throttle)</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//思想：在规定的时间内连续触发，只执行第一次，在该时间过后才会执行触发的下一个事件</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">throttle</span>(<span class="params">callback,delay</span>)&#123;</span><br><span class="line">    <span class="keyword">let</span> timer = <span class="literal">null</span><span class="comment">//节流阀</span></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(!timer)&#123;</span><br><span class="line">            <span class="built_in">clearTimeout</span>(timer)</span><br><span class="line">            timer = <span class="built_in">setTimeout</span>(<span class="function">()=&gt;</span>&#123;</span><br><span class="line">                <span class="title function_">callback</span>()</span><br><span class="line">                <span class="built_in">clearTimeout</span>(timer)</span><br><span class="line">                timer = <span class="literal">null</span><span class="comment">//释放节流阀</span></span><br><span class="line">            &#125;,delay)</span><br><span class="line">&#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> btn = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.btn&#x27;</span>)</span><br><span class="line">btn.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>,<span class="title function_">throttle</span>(<span class="function">()=&gt;</span>&#123;<span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;hello&#x27;</span>);&#125;,<span class="number">1000</span>))</span><br></pre></td></tr></table></figure><ul><li><p>鼠标连续不断地触发某事件（如点击），只在单位时间内只触发一次；</p></li><li><p>懒加载时要监听计算滚动条的位置，但不必每次滑动都触发，可以降低计算的频率，而不必去浪费 CPU 资源；</p></li><li><p>比如窗口调整、页面滚动、抢购和疯狂点击等会用到节流。</p></li></ul><hr><h2 id="3、instanceof"><a href="#3、instanceof" class="headerlink" title="3、instanceof"></a>3、instanceof</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">myInstanceOf</span>(<span class="params">obj,con</span>)&#123;</span><br><span class="line">    <span class="keyword">while</span>(obj.<span class="property">__proto__</span>)&#123;<span class="comment">//当obj还存在原型时，继续查找</span></span><br><span class="line">        obj = obj.<span class="property">__proto__</span> <span class="comment">//顺着原型链</span></span><br><span class="line">        <span class="keyword">if</span>(obj.<span class="property">constructor</span> == con)&#123; <span class="comment">//如果obj的构造函数等于传入的函数，则证明是该对象的实例</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">P</span>&#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params">name</span>)&#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">name</span> = name</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">C</span> <span class="keyword">extends</span> <span class="title class_ inherited__">P</span>&#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params">name,sex</span>)&#123;</span><br><span class="line">        <span class="variable language_">super</span>(name)</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">sex</span> = sex</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> c = <span class="keyword">new</span> <span class="title function_">C</span>(<span class="string">&#x27;zs&#x27;</span>,<span class="string">&#x27;boy&#x27;</span>)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">myInstanceOf</span>(c,P))<span class="comment">//true</span></span><br></pre></td></tr></table></figure><hr><h2 id="4、new"><a href="#4、new" class="headerlink" title="4、new"></a>4、new</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">myNew</span>(<span class="params">fn</span>)&#123;</span><br><span class="line">    <span class="comment">//创建一个空对象</span></span><br><span class="line">    <span class="keyword">let</span> obj = &#123;&#125;</span><br><span class="line">    <span class="comment">//将fn的原型放在obj的原型上</span></span><br><span class="line">    obj.<span class="property">__proto__</span> = fn.<span class="property"><span class="keyword">prototype</span></span></span><br><span class="line">    <span class="comment">//执行fn的构造函数，并改变this指向</span></span><br><span class="line">    fn.<span class="title function_">call</span>(obj)</span><br><span class="line">    <span class="comment">//返回构造完成的对象</span></span><br><span class="line">    <span class="keyword">return</span> obj</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">person</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">name</span> = name</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">myNew</span>(person) <span class="keyword">instanceof</span> person)</span><br></pre></td></tr></table></figure><hr><h2 id="5、Promise"><a href="#5、Promise" class="headerlink" title="5、Promise"></a>5、Promise</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><hr><h2 id="6、封装Ajax"><a href="#6、封装Ajax" class="headerlink" title="6、封装Ajax"></a>6、封装Ajax</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//实例化请求对象</span></span><br><span class="line"><span class="keyword">let</span> xhr = <span class="keyword">new</span> <span class="title class_">XMLHttpRequest</span>()</span><br><span class="line"><span class="comment">//建立连接 (get post)</span></span><br><span class="line">xhr.<span class="title function_">open</span>(<span class="string">&#x27;get&#x27;</span>, <span class="string">&#x27;http://jsonplaceholder.typicode.com/todos&#x27;</span>)</span><br><span class="line"><span class="comment">//发送请求</span></span><br><span class="line">xhr.<span class="title function_">send</span>()</span><br><span class="line"><span class="comment">//监听请求的变化 readyState状态值(xhr独有)</span></span><br><span class="line">xhr.<span class="title function_">addEventListener</span>(<span class="string">&#x27;readystatechange&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">//在监听的处理函数内容接收响应数据</span></span><br><span class="line">    <span class="comment">//判断是否有数据返回 </span></span><br><span class="line">    <span class="comment">//readyState(0-4) 0:请求未发送; 1:请求准备发送; 2:请求发送成功; 3:请求成功,响应中 4:请求成功,响应完成;</span></span><br><span class="line">    <span class="comment">//http状态码 xhr.status(100-599)</span></span><br><span class="line">    <span class="keyword">if</span> (xhr.<span class="property">readyState</span> == <span class="number">4</span> &amp;&amp; <span class="regexp">/^2\d&#123;2&#125;/</span>.<span class="title function_">test</span>(xhr.<span class="property">status</span>)) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(xhr.<span class="property">responseXML</span>)<span class="comment">//接收xml</span></span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(xhr.<span class="property">responseText</span>)<span class="comment">//接收文本 字符串</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><hr><h2 id="7、观察者模式Observer"><a href="#7、观察者模式Observer" class="headerlink" title="7、观察者模式Observer"></a>7、观察者模式Observer</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Observer</span>&#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">events</span> = &#123;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//事件绑定</span></span><br><span class="line">    <span class="title function_">on</span>(<span class="params">eventName,handler</span>)&#123;</span><br><span class="line">        <span class="comment">//如果存在这个事件名，则直接添加事件</span></span><br><span class="line">        <span class="keyword">if</span>(eventName <span class="keyword">in</span> <span class="variable language_">this</span>.<span class="property">events</span>)&#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">events</span>[eventName].<span class="title function_">add</span>(handler)</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(eventName+<span class="string">&#x27;事件绑定成功&#x27;</span>)</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;<span class="comment">//如果不存在，则新建一个set,并添加该事件</span></span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">events</span>[eventName] = <span class="keyword">new</span> <span class="title class_">Set</span>([handler])</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(eventName+<span class="string">&#x27;事件绑定成功&#x27;</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//事件触发</span></span><br><span class="line">    <span class="title function_">emit</span>(<span class="params">eventName,...args</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable language_">this</span>.<span class="property">events</span>[eventName])&#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">events</span>[eventName].<span class="title function_">forEach</span>(<span class="function">(<span class="params">fn</span>)=&gt;</span>&#123;</span><br><span class="line">                fn.<span class="title function_">apply</span>(<span class="variable language_">this</span>,args)</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//事件解绑</span></span><br><span class="line">    <span class="title function_">off</span>(<span class="params">eventName,handler</span>)&#123;</span><br><span class="line">        <span class="comment">//如果本就不存在这个事件，则不作为</span></span><br><span class="line">        <span class="keyword">if</span>(!<span class="variable language_">this</span>.<span class="property">events</span>[eventName])&#123;</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">events</span>[eventName].<span class="title function_">delete</span>(handler)</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(eventName+<span class="string">&#x27;事件删除成功&#x27;</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> observer = <span class="keyword">new</span> <span class="title class_">Observer</span>()</span><br><span class="line">observer.<span class="title function_">on</span>(<span class="string">&#x27;click&#x27;</span>,handler)</span><br><span class="line"></span><br><span class="line">observer.<span class="title function_">emit</span>(<span class="string">&#x27;click&#x27;</span>,<span class="string">&#x27;hello&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">handler</span>(<span class="params">args</span>)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;click&#x27;</span>+args)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="8、浅拷贝"><a href="#8、浅拷贝" class="headerlink" title="8、浅拷贝"></a>8、浅拷贝</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">clone</span>(<span class="params">obj</span>)&#123;</span><br><span class="line">    <span class="keyword">let</span> newObj = &#123;&#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> key <span class="keyword">in</span> obj)&#123;</span><br><span class="line">        newObj[key] = obj[key]</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> newObj</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> obj = &#123;<span class="attr">user</span>:&#123;<span class="attr">name</span>:<span class="string">&#x27;jack&#x27;</span>&#125;&#125;</span><br><span class="line"><span class="keyword">let</span> copyObj = <span class="title function_">clone</span>(obj)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(copyObj == obj) <span class="comment">//false</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(copyObj.<span class="property">user</span> == obj.<span class="property">user</span>) <span class="comment">//true</span></span><br></pre></td></tr></table></figure><hr><h2 id="9、深拷贝"><a href="#9、深拷贝" class="headerlink" title="9、深拷贝"></a>9、深拷贝</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">deepClone</span>(<span class="params">obj</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">typeof</span> obj == <span class="string">&#x27;function&#x27;</span>)&#123;</span><br><span class="line">        <span class="comment">// 直接返回新的函数</span></span><br><span class="line">        <span class="keyword">return</span> obj.<span class="title function_">bind</span>(<span class="variable language_">this</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 如果不是对象或者为null</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">typeof</span> obj != <span class="string">&#x27;object&#x27;</span> || !obj) &#123;</span><br><span class="line">        <span class="keyword">return</span> obj</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//如果是对象 function Regexp Object Array Date</span></span><br><span class="line">    <span class="comment">//如果是正则</span></span><br><span class="line">    <span class="keyword">if</span> (obj <span class="keyword">instanceof</span> <span class="title class_">RegExp</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">RegExp</span>(obj)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//如果是Date</span></span><br><span class="line">    <span class="keyword">if</span> (obj <span class="keyword">instanceof</span> <span class="title class_">Date</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Date</span>(obj.<span class="title function_">getime</span>())</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">let</span> copyObj = &#123;&#125;</span><br><span class="line">    <span class="keyword">if</span> (obj <span class="keyword">instanceof</span> <span class="title class_">Array</span>) &#123;</span><br><span class="line">        copyObj = []</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> key <span class="keyword">in</span> obj) &#123;</span><br><span class="line">        <span class="comment">//递归</span></span><br><span class="line">        copyObj[key] = <span class="title function_">deepClone</span>(obj[key])</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> copyObj</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> obj = &#123;</span><br><span class="line">    <span class="attr">objs</span>:&#123;</span><br><span class="line">        <span class="attr">name</span>:&#123;</span><br><span class="line">            <span class="attr">objss</span>:&#123;</span><br><span class="line">                <span class="attr">names</span>:<span class="string">&#x27;hello&#x27;</span></span><br><span class="line">            &#125;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> obj2 = <span class="title function_">deepClone</span>(obj)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(obj2 == obj)<span class="comment">//false</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(obj2.<span class="property">objs</span> == obj.<span class="property">objs</span>)<span class="comment">//false</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(obj2.<span class="property">objs</span>.<span class="property">name</span> == obj.<span class="property">objs</span>.<span class="property">name</span>)<span class="comment">//false</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(obj2.<span class="property">objs</span>.<span class="property">name</span>.<span class="property">objss</span>.<span class="property">namess</span> == obj.<span class="property">objs</span>.<span class="property">name</span>.<span class="property">objss</span>.<span class="property">namess</span>)<span class="comment">//true</span></span><br></pre></td></tr></table></figure><hr><h2 id="10、数组的扁平化"><a href="#10、数组的扁平化" class="headerlink" title="10、数组的扁平化"></a>10、数组的扁平化</h2><h3 id="JSON-正则"><a href="#JSON-正则" class="headerlink" title="JSON+正则"></a>JSON+正则</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, [<span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, [<span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span>]]]</span><br><span class="line"><span class="comment">// JSON实现数组扁平化</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">flatJSON</span>(<span class="params">arr</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> <span class="title class_">Arr</span> = <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(arr)</span><br><span class="line">    <span class="title class_">Arr</span> = <span class="title class_">Arr</span>.<span class="title function_">replace</span>(<span class="regexp">/[\[\]]/g</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    <span class="title class_">Arr</span> = <span class="string">&#x27;[&#x27;</span> + <span class="title class_">Arr</span> + <span class="string">&#x27;]&#x27;</span></span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">JSON</span>.<span class="title function_">parse</span>(<span class="title class_">Arr</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">flatJSON</span>(arr));</span><br></pre></td></tr></table></figure><h3 id="递归"><a href="#递归" class="headerlink" title="递归"></a>递归</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, [<span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, [<span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span>]]]</span><br><span class="line"><span class="comment">// 递归实现数组扁平化</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">flatRecursive</span>(<span class="params">arr</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> result = []</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> i = <span class="number">0</span> ; i &lt; arr.<span class="property">length</span> ; i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title class_">Array</span>.<span class="title function_">isArray</span>(arr[i]))&#123;</span><br><span class="line">            result = result.<span class="title function_">concat</span>(<span class="title function_">flatRecursive</span>(arr[i]))</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            result.<span class="title function_">push</span>(arr[i])</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">flatRecursive</span>(arr));</span><br></pre></td></tr></table></figure><hr><h2 id="11、颜色RGB颜色转换16进制"><a href="#11、颜色RGB颜色转换16进制" class="headerlink" title="11、颜色RGB颜色转换16进制"></a>11、颜色RGB颜色转换16进制</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">rgbToSix</span>(<span class="params">rgbStr</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> six = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">let</span> rgbStrArr = rgbStr.<span class="title function_">split</span>(<span class="string">&#x27;,&#x27;</span>)</span><br><span class="line">    rgbStrArr.<span class="title function_">forEach</span>(<span class="function">(<span class="params">v</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="comment">//将非数字转为空字符串，随后将其整个转为数组，再用toString转为16进制，最后进行拼接</span></span><br><span class="line">        six += <span class="title class_">Number</span>(v.<span class="title function_">replace</span>(<span class="regexp">/[^0-9]/ig</span>,<span class="string">&#x27;&#x27;</span>)).<span class="title function_">toString</span>(<span class="number">16</span>)</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;#&#x27;</span>+six</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">rgbToSix</span>(<span class="string">&#x27;rgb(255,255,255)&#x27;</span>));</span><br></pre></td></tr></table></figure><hr><h2 id="12、模拟实现call和apply"><a href="#12、模拟实现call和apply" class="headerlink" title="12、模拟实现call和apply"></a>12、模拟实现call和apply</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//call</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//apply</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><hr>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> JavaScript </category>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js </tag>
            
            <tag> 前端 </tag>
            
            <tag> 算法 </tag>
            
            <tag> 闭包 </tag>
            
            <tag> 防抖 </tag>
            
            <tag> 节流 </tag>
            
            <tag> 排序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2023/06/05/hello-world/"/>
      <url>/2023/06/05/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Welcome~欢迎来到袁同学的个人博客</title>
      <link href="/2023/06/05/hello/"/>
      <url>/2023/06/05/hello/</url>
      
        <content type="html"><![CDATA[<!-- title【必需】文章标题date【必需】文章创建日期updated【可选】文章更新日期tags【可选】文章标籤categories【可选】文章分类keywords【可选】文章关键字description【可选】文章描述top_img【可选】文章顶部图片cover【可选】文章缩略图(如果没有设置top_img,文章页顶部将显示缩略图，可设为false/图片地址/留空)comments【可选】显示文章评论模块(默认 true)toc【可选】显示文章TOC(默认为设置中toc的enable配置)toc_number【可选】显示toc_number(默认为设置中toc的number配置)toc_style_simple【可选】显示 toc 简洁模式copyright【可选】显示文章版权模块(默认为设置中post_copyright的enable配置)copyright_author【可选】文章版权模块的文章作者copyright_author_href【可选】文章版权模块的文章作者链接copyright_url【可选】文章版权模块的文章连结链接copyright_info【可选】文章版权模块的版权声明文字mathjax【可选】显示mathjax(当设置mathjax的per_page: false时，才需要配置，默认 false)katex【可选】显示katex(当设置katex的per_page: false时，才需要配置，默认 false)aplayer【可选】在需要的页面加载aplayer的js和css,请参考文章下面的音乐 配置highlight_shrink【可选】配置代码框是否展开(true/false)(默认为设置中highlight_shrink的配置)aside【可选】显示侧边栏 (默认 true) --><div align="center">  <!-- dynamic typing effect 动态打字效果 -->  <div align="center">    <a href="https://nobitayuan.github.io/">      <img src="https://readme-typing-svg.demolab.com?font=Fira+Code&pause=1000&width=435&lines=道阻且长 行则将至;袁同学祝您今天生活愉快!&center=true&size=27" alt="Typing SVG" />    </a>  </div>  <div align="center">    <!-- knock code pictures 敲代码的图片 -->    <img src="https://cdn.jsdelivr.net/gh/sun0225SUN/sun0225SUN/assets/images/coding.gif" /><br>  </div><br>    <div align="center">    <!-- profile logo 个人资料徽标 -->    <a href="https://github.com/NobitaYuan"><img src="https://img.shields.io/badge/GitHub-仓库-inactive" /></a>&emsp;    <a href="https://nobitayuan.github.io"><img src="https://img.shields.io/badge/Website-博客-blue" /></a>&emsp;    <a href="https://space.bilibili.com/19217489"><img src="https://img.shields.io/badge/Bilibili-B站-ff69b4" /></a>&emsp;    <a href="https://blog.csdn.net/yuan1723936262"><img src="https://img.shields.io/badge/CSDN-论坛-c32136" /></a>&emsp;    <a href="https://www.zhihu.com/people/hello-43-1-31"><img src="https://img.shields.io/badge/Zhihu-知乎-blue" /></a>&emsp;    <!-- visitor statistics logo 访客数统计徽标 -->    <img src="https://komarev.com/ghpvc/?username=NobitaYuan&label=Views&color=0e75b6&style=flat" alt="访问量统计" />  </div>  </div>  <!-- —————————————————————————————————— 分割线 —————————————————————————————————— -->  <br><img width="200%" src="https://cdn.jsdelivr.net/gh/sun0225SUN/sun0225SUN/assets/images/hr.gif" /><br>  <div align="center">  <!--  奖杯  -->  <div align="center">    <img  src="https://github-profile-trophy.vercel.app/?username=NobitaYuan&theme=nord&row=1&column=7&no-frame=true&no-bg=false" /><br><br>  </div>    <!--  活跃曲线图  -->  <table align="center">     <img src="https://github-readme-activity-graph.vercel.app/graph?username=NobitaYuan&theme=react" alt="Activity"/>  </table>    <!--  周连续贡献  --><p>  <img width="150" src="https://cdn.jsdelivr.net/gh/sun0225SUN/sun0225SUN/assets/images/shin_chan.gif" /><a href="https://github.com/NobitaYuan"><img src="https://streak-stats.demolab.com/?user=NobitaYuan&theme=tokyonight&locale=zh_Hans&mode=weekly" alt="GitHub Streak"></a><img width="150" src="https://cdn.jsdelivr.net/gh/sun0225SUN/sun0225SUN/assets/images/shin_chan.gif" /></p>  <!-- GitHub 数据统计 -->  <img height="137px" src="https://github-readme-stats-git-masterrstaa-rickstaa.vercel.app/api?username=NobitaYuan&hide_title=true&hide_border=true&show_icons=trueline_height=21&theme=radical" />  <img height="137px" src="https://github-readme-stats-git-masterrstaa-rickstaa.vercel.app/api/top-langs/?username=NobitaYuan&hide_title=true&hide_border=true&layout=compact&langs_count=6&theme=radical" /><br><br>  <div align="center">    <!-- gif -->    <img height="100" width="100" src="https://cdn.jsdelivr.net/gh/sun0225SUN/sun0225SUN/assets/images/html.webp">    <img height="100" width="100" src="https://cdn.jsdelivr.net/gh/sun0225SUN/sun0225SUN/assets/images/cssgif.webp">    <img height="100" width="100" src="https://cdn.jsdelivr.net/gh/sun0225SUN/sun0225SUN/assets/images/js.webp">    <img height="100" width="100" src="https://cdn.jsdelivr.net/gh/sun0225SUN/sun0225SUN/assets/images/vscode.webp">    <img height="100" width="100" src="https://cdn.jsdelivr.net/gh/sun0225SUN/sun0225SUN/assets/images/react.webp">    <img height="95" width="95" src="https://cdn.jsdelivr.net/gh/sun0225SUN/sun0225SUN/assets/images/vue.webp">    <img height="100" width="100" src="https://cdn.jsdelivr.net/gh/sun0225SUN/sun0225SUN/assets/images/github.webp">  </div>    <!-- just img 图片 --><p>  <br><img src="https://cdn.jsdelivr.net/gh/sun0225SUN/sun0225SUN/assets/images/icon.png" /></p>  <!-- Quotes 名人名言 --><p>  <br><img src="https://quotes-github-readme.vercel.app/api?type=horizontal&theme=dark" /><br></p>   <!-- —————————————————————————————————— 分割线 —————————————————————————————————— -->  <img width="200%" src="https://cdn.jsdelivr.net/gh/sun0225SUN/sun0225SUN/assets/images/hr.gif" /></div>]]></content>
      
      
      <categories>
          
          <category> 起步 </category>
          
          <category> 起步二 </category>
          
          <category> 起步三 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> html </tag>
            
            <tag> css </tag>
            
            <tag> js </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
